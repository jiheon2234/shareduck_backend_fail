spring:
  application:
    name: shareduck
  datasource:
    url: jdbc:mysql://${DATABASE_URL}/shareduck
    password: ${DB_PASSWORD}
    username: ${DB_ID}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        highlight_sql: true
        show_sql: true
        format_sql: true
        default_batch_fetch_size: 100
        order_inserts: true
        order_updates: true
        jdbc:
          batch_size: 100
    database: mysql
  data:
    redis:
      host: 127.0.0.1   #${REDIS_URL}
      port: 6379

  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 2MB
      enabled: true
#      file-size-threshold: 1MB
#      location: /tmp
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_ID}
            client-secret: ${GOOGLE_SECRET}
            scope:
              - email
              - profile

logging:
  level:
    org.hibernate.sql: info
    org.hibernate.type.descriptor.sql: trace



jwt:
  prefix: 'Bearer '
  secret-key: ${KEY}
  access-token-validity-in-seconds: 150
  refresh-token-validity-in-seconds: 259200
  access-header: Authentication
  refresh-header: Refresh

cookie:
  limit-time: 259200
  accepted-url: '/api/auth/reissue'
  cookie-name: Refresh
  domain: localhost





aws:
  s3:
    bucket:
      name: ${SHAREDUCK_S3_BUCKET}
    postImage.root: ${SHAREDUCK_POSTIMAGE_ROOT_PATH}
  cloudfront:
    host: ${SHAREDUCK_CLOUDFRONT_HOST}
